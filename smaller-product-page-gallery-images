Steps to make the additional product images at the bottom of the product page in the narrative theme a more reasonable size.

First, make a copy of your theme so you can get it back if something goes wrong.

Find the theme.scss.liquid file in the Assets folder of your theme.

This step is optional -- if you don't do it, the image gallery will span the entire width of the screen. The rest of the design of the page
doesn't use up the entire screen width and this makes the image gallery look strange in comparison. 
To make the image gallery container a more reasonable size, add the following code at the very bottom of the file:

.shopify-section .product-template .product__submedia-list 
  max-width: 1000px !important; 
  margin-left: auto !important; 
  margin-right: auto !important;
 }
      
To update the size of the images in the gallery, find this piece of code:

  .product__submedia-list--single & {
    @include flex(none);
    max-width: 100%;
    max-height: 100%;
  }
}

If there is only one image to display, the above code will cause the single image to consume the entire width of the container. 
Update it as follows to make it smaller. If you used the previous section to limit the container size, a width of 20% will 
allow 5 images per row in the gallery. You can adjust the 20% to some other number depending on how you want it to look.

  .product__submedia-list--single & {
    @include flex(none);
    width: 20%; //if there is only one image to display, display it at 20% of the container size
    max-width: 100%;
    max-height: 100%;
  }
}

Next, find this section of the code:

@include media-query($medium-up) {
  .product__submedia-list-item {
    @include flex(1 1 33%);
  }

  .product__submedia-list--r2 {
    .product__submedia-list-item:nth-last-of-type(2),
    .product__submedia-list-item:nth-last-of-type(2)
      + .product__submedia-list-item {
      @include flex(1 1 50%);
    }
  }

  .product__submedia-list--r1 {
    .product__submedia-list-item:nth-last-of-type(4),
    .product__submedia-list-item:nth-last-of-type(4)
      ~ .product__submedia-list-item {
      @include flex(1 1 50%);
    }
  }
}

Update it as follows. I recommend just commenting out the existing code rather than deleting it so you can easily go back if you want to. A couple of notes:
 - the width should be the same as whatever width you used in previous change
 - the padding is optional - you can change the amount of padding or just leave it out
 - If you use the same container size as I've used, and a use 20% width for each image, you will end up with rows that will fit a maximum of 5 images. 
 - If the product has more than 5 images, additional images will be displayed in another row, and will be left justified
    - e.g. if the product has 7 images, there will be 5 in the first row, and two in the second row

@include media-query($medium-up) {
  .product__submedia-list-item {
    //@include flex(1 1 33%);
    @include flex(none);
    width: 20%;
    padding-top: 5px;
    padding-bottom: 5px;
    padding-left: 5px;
    padding-right: 5px;
  }

  .product__submedia-list--r2 {
    .product__submedia-list-item:nth-last-of-type(2),
    .product__submedia-list-item:nth-last-of-type(2)
      + .product__submedia-list-item {
      //@include flex(1 1 50%);
      @include flex(none);
      width: 20%;
      padding-top: 5px;
      padding-bottom: 5px;
      padding-left: 5px;
      padding-right: 5px;
      
    }
  }

  .product__submedia-list--r1 {
    .product__submedia-list-item:nth-last-of-type(4),
    .product__submedia-list-item:nth-last-of-type(4)
      ~ .product__submedia-list-item {
      //@include flex(1 1 50%);
      @include flex(none);
      width: 20%;
      padding-top: 5px;
      padding-bottom: 5px;
      padding-left: 5px;
      padding-right: 5px;
    }
  }
}

One thing to be aware of - in the product-template.liquid file you'll find this code:
    {% comment %}
      Insert images into rows of 3 and/or 2 depending on the total number of
      images. 

    {% endcomment %}
  
    {% assign total_modulus = total_media | modulo: 3 %}

    {% if total_media == 1 %}<div class="page-width">{% endif %}
    
If you make the changes to the theme.sccs.liquid file as described earlier, the above code in product-template.liquid doesn't do anything, since the purpose of that code was to limit the gallery to 3 images per row maximum, and to ensure the entire container was filled with images. So each row would have either 1, 2 or 3 product images, depending on the total number of product images. The code we changed in theme.sccs.liquid forces the images to a specific size, so the number of images per row is determined by the size of the image, rather than the other way around. Leaving the code above in doesn't hurt anything, and it is used to define classes that are used elsewhere (although strictly speaking also not needed anymore), so taking it out is likely to break things without being more thorough. I was going for a quick fix. Put another way, I'm pretty sure my solution is a hack, but it does the job so I'm okay with it. This is one of the reasons I'm not a developer anymore. 
      padding-top: 5px;
